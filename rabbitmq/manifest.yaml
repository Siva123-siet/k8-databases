apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
type: Opaque #user-defined data so opaque
data:
  RABBITMQ_DEFAULT_USER: "cm9ib3Nob3A="
  RABBITMQ_DEFAULT_PASS: "cm9ib3Nob3AxMjM="
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  clusterIP: None
  selector:
    component: rabbitmq
    project: roboshop
    tier: database
  ports:
    - protocol: TCP
      port: 3306 # service port
      targetPort: 3306 # container port
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  selector:
    component: rabbitmq
    project: roboshop
    tier: database
  ports:
    - protocol: TCP
      port: 3306 # service port
      targetPort: 3306 # container port
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  selector:
    matchLabels:
      component: rabbitmq
      project: roboshop
      tier: database # has to match .spec.template.metadata.labels
  serviceName: "rabbitmq-headless" # this should be headless service
  replicas: 2 # by default is 1
  template:
    metadata:
      labels:
        component: rabbitmq
        project: roboshop
        tier: database # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3
        envFrom:
          - secretRef:
              name: rabbitmq
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
# This is PVC.You can directly create here
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "roboshop-ebs"
      resources:
        requests:
          storage: 2Gi
